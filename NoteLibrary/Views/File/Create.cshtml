@model NoteLibrary.ViewModels.FileCreateViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_LayoutAccount.cshtml";
}


<div class="container mt-2">
    <h2>Ders Notu Oluştur</h2>
    <h4>Dosya</h4>
    <hr />
    <div class="row mb-3">
        <div class="col-md-12">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="col-md-12"><p class="text-danger">Lütfen yükleyeceğini dosyayı seçmeden önce bütün alanları doldurduğunuza emin olunuz !</p></div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Başlık</label>
                            <select class="form-control" name="title" id="title">
                                <option value="" disabled selected>Başlık Seçiniz</option>
                                <option value="Vize">Vize</option>
                                <option value="Final">Final</option>
                                <option value="Ödev">Ödev</option>
                                <option value="Büt">Büt</option>
                                <option value="Çıkmış Soru">Çıkmış Soru</option>
                                <option value="Slayt">Slayt</option>
                                <option value="Defter Notu">Defter Notu</option>
                                <option value="Kitap">Kitap</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Açıklama</label>
                            <input type="text" class="form-control" placeholder="Örn: Ahmet Hocanın Notu" id="description" name="description" value="" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Şehir</label>
                            <select asp-for="City" id="cityCategoryId" class="form-control" asp-items="@(new SelectList(ViewBag.ListofCities,"Id","Name"))"></select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Üniversite</label>
                            <select asp-for="University" id="uniCategoryId" class="form-control" asp-items="@(new SelectList(string.Empty,"Id","Name"))"></select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Bölüm</label>
                            <select asp-for="Department" id="depCategoryId" class="form-control" asp-items="@(new SelectList(string.Empty,"Id","Name"))"></select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Ders</label>
                            <select asp-for="Lesson" id="lesCategoryId" class="form-control" onchange="onChange(this)" asp-items="@(new SelectList(string.Empty,"Id","Name"))"></select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <p class="text-danger">Eğer birden fazla dosya yüklemek istiyorsanız lütfen zip ya da rarlayınız !!!</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <input class="btn btn-default mt-2 col-md-12 text-center" type="file" style="background-color:#FFC300; color:#181818;" value="upload" id="fileButton">
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" id="progressid" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                        </div>
                    </div>
                </div>














            </form>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.js"></script>

    <script src="~/package/dist/sweetalert2.js"></script>
    <script src="~/FirebaseJs/FirebaseConfig.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/promise-polyfill"></script>
    <script src="https://www.gstatic.com/firebasejs/5.7.2/firebase.js"></script>

    <script type="text/javascript">
    function onChange(t) {
        var id = t.value;
    };
    $(document).ready(function () {
        var items = "<option value='0'>Select</option>";
        $('#cityId').html(items);
        $('#uniId').html(items);
        $('#depId').html(items);
    });
    $(document).ready(function () {
        $('#cityCategoryId').change(function () {
            var url = '@Url.Content("~/")' + "File/GetUniversities";
            var ddlsource = "#cityCategoryId";
            $.getJSON(url, { cityCategoryId : $(ddlsource).val() }, function (data) {
                var items = '';
                $("#uniCategoryId").empty();
                $.each(data, function (i, uni) {
                    items += "<option value='" + uni.value + "'>" + uni.text + "</option>";
                });
                $('#uniCategoryId').html(items);
            });
        });
    });
    $(document).ready(function () {
        $('#uniCategoryId').change(function () {
            var url = '@Url.Content("~/")' + "File/GetDepartment";
            var ddlsource = "#uniCategoryId";
            $.getJSON(url, { uniCategoryId: $(ddlsource).val() }, function (data) {
                var items = '';
                $("#depCategoryId").empty();
                $.each(data, function (i, uni) {
                    items += "<option value='" + uni.value + "'>" + uni.text + "</option>";
                });
                $('#depCategoryId').html(items);
            });
        });
    });
     $(document).ready(function () {
         $('#depCategoryId').change(function () {
             var url = '@Url.Content("~/")' + "File/GetLesson";
             var ddlsource = "#depCategoryId";
             $.getJSON(url, { depCategoryId: $(ddlsource).val() }, function (data) {
                var items = '';
                 $("#lesCategoryId").empty();
                $.each(data, function (i, uni) {
                    items += "<option value='" + uni.value + "'>" + uni.text + "</option>";
                });
                 $('#lesCategoryId').html(items);
            });
        });
    });
    </script>

    <script>
        firebase.initializeApp(config);

        var fileButton = document.getElementById('fileButton');
        var progressid = document.getElementById('progressid');

        //Change the file name
        function guid() {
            function s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
            }
            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
        }

        fileButton.addEventListener('change', function (e) {
            var file = e.target.files[0];
            var newName = guid(file.name);
            var url1 = 'files/' + newName;
            var storageRef = firebase.storage().ref(url1);

            var task = storageRef.put(file);

            task.on('state_changed', function (snapshot) {
                // Observe state change events such as progress, pause, and resume
                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded
                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                console.log('Upload is ' + progress + '% done');
                switch (snapshot.state) {

                    case firebase.storage.TaskState.PAUSED: // or 'paused'
                        console.log('Upload is paused');
                        break;
                    case firebase.storage.TaskState.RUNNING: // or 'running'

                        Swal.showLoading();

                        progressid.setAttribute("aria-valuenow", progress);
                        progressid.style.width = progress + "%";

                        console.log('Upload is running');
                        break;

                }
            }, function (error) {
                // Handle unsuccessful uploads
                console.log(error)
                Swal({
                    type: 'error',
                    title: 'Oops...',
                    text: 'Birşeyler yanlış gitti ve attığınız ders notu sisteme yüklenemedi.',
                }).then(function () {
                    window.location.href = "/Account/Index";
                });



            }, function () {
                //After the upload data will go database
                task.snapshot.ref.getDownloadURL().then(function (downloadURL) {
                    var title = document.getElementById('title').value;
                    var descrpt = document.getElementById('description').value;
                    var categorylesson = document.getElementById('lesCategoryId').value;
                    var unicategoryid = document.getElementById('uniCategoryId').value;
                    var depcategoryid = document.getElementById('depCategoryId').value;
                    console.log(unicategoryid);
                    $.ajax({
                        type: "POST",
                        url: "/File/Create",
                        data: {
                            filePath: downloadURL,
                            categoryLessonId: categorylesson,
                            title: title,
                            description: descrpt,
                            uniCategoryId: unicategoryid,
                            depCategoryId: depcategoryid
                        },
                        success: function (returndata) {
                            if (returndata.ok == true) {
                                Swal({
                                    title: 'Teşekkürler !',
                                    type: 'success',
                                    html:
                                        '<p>Dosya Yüklemesi Başarıyla Gerçekleşti!</p>'
                                }).then(function () {
                                    window.location.href = "/Account/Index";
                                });
                            }
                            else {
                                Swal({
                                    title: 'Hata !',
                                    type: 'error',
                                    html:
                                        '<p>Alanlar boş bırakılamaz !</p>'
                                }).then(function () {
                                    window.location.href = "/File/Create";
                                });

                            }


                        },

                    });

                    console.log('File available at', downloadURL);
                });
            });


        });



    </script>
</div>